binding 'node' {
	'start time': binding 'number' { }
	'end time': binding 'number' { }
	'resources': binding 'collection' {
		'name': binding .'entries' 'entry' 'entity' 'node' 'text' { }
	}
	'orders': binding 'collection' {
		'order': binding .'entries' 'entry' 'entity' 'node' 'text' { }
		'scheduled': binding .'entries' 'entry' 'entity' 'node' 'state group' {
			'yes': binding 'state' {
				'resource': binding 'node' 'text' { }
				'start time': binding 'node' 'number' { }
				'end time': binding 'node' 'number' { }
				'move': binding 'node' 'operation' {
					'resource': binding 'parameters' 'text' { }
					'start time': binding 'parameters' 'number' { }
				}
			}
		}
	}
	'dragged task': text default: ""
	'drop status': text default: ""
	'show popup': stategroup default: 'no' (
		'no' { }
		'yes' {
			'task': text
		}
	)
}

control 'list' {
	'space between items' = 'none' { }
	'orientation' = 'vertical' {
		'height' = 'auto' {
			'list' = [
				{
					'item markup' = control 'padded box' {
						'padding top' = 'half' { }
						'padding right' = 'single' { }
						'padding left' = 'single' { }
						'background color' = 'set' {
							'color' = "#f2f2f2"
						}
						'markup' = control 'list' {
							'space between items' = 'none' { }
							'align' = 'center' { }
							'orientation' = 'horizontal' {
								'width' = 'auto' {
									'list' = [
										{
											'item markup' = control 'font size' {
												'font size' = 20
												'markup' = control 'icon' {
													'name' = 'analytics' { }
												}
											}
										} ,
										{
											'item markup' = control 'text' {
												'text' = "Corrosion order planning"
												'heading level' = 'first' { }
											}
										}
									]
								}
							}
						}
					}
				} ,
				// {
				// 	'item markup' = control 'list' {
				// 		'space between items' = 'auto' { }
				// 		'orientation' = 'vertical' {
				// 			'height' = 'auto' {
				// 				'list' = [
				// 					{
				// 						'item markup' = control 'text' {
				// 							'text' = root . ::'dragged task'
				// 						}
				// 					} ,
				// 					{
				// 						'item markup' = control 'text' {
				// 							'text' = root . ::'drop status'
				// 						}
				// 					}
				// 				]
				// 			}
				// 		}
				// 	}
				// } ,
				{
					'item markup' = control 'padded box' {
						'padding right' = 'single' { }
						'padding bottom' = 'single' { }
						'padding left' = 'single' { }
						'markup' = control 'resource planning' {
							'resources' = walk ::'resources'.'entries' as $ => {
								'name' = switch $ /'entry'/'entity'/'node'::'name'.'is set' (
									|'yes' as $ => $ .'text'
									|'no' => "-"
								)
								'drop' = switch root ::'orders'.'entries'[ root . ::'dragged task' ] (
									| node /'entry'/'entity'/'node' as $ => switch ^ $ /'entry'/'entity'/'node'::'name'.'is set' (
										|'yes' as $ => [
											^ $ ::'scheduled'::'yes'/'node'::'move'/'parameters'::'resource'>>'update text' ( text $ .'text' ) ,
											^ $ ::'scheduled'::'yes'/'node'::'move'/'parameters'::'start time'>>'set number' ( number # argument transform 'JS date to julian date and time' ) ,
											switch ^ $ ::'scheduled'::'yes'/'node'::'move'.'executable' (
												|'yes' as $ => [
													$ >>'execute',
													root set text 'drop status' = "executing"
												]
												|'no' => root set text 'drop status' = "not executable"
											)
										]
										|'no' => root set text 'drop status' = "no order"
									)
									| none => root set text 'drop status' = "no dragged task"
								)
							}
							'tasks' = walk ::'orders'.'entries' as $ => switch $ /'entry'/'entity'/'node'::'scheduled'::'yes'.'is selected' (
								|'no' => none
								|'yes' $ /'entry'/'entity'/'node'::'scheduled'::'yes' as $ => {
									'name' = switch ^ $ /'entry'/'entity'/'node'::'order'.'is set' (
										|'yes' as $ => $ .'text'
										|'no' => "-"
									)
									'resource' = switch $ /'node'::'resource'.'is set' (
										|'yes' as $ => $ .'text'
										|'no' => "-"
									)
									'start' = switch $ /'node'::'start time'.'is set' (
										|'yes' as $ => $ #'number' transform 'julian date time to JS date'
										|'no' => 0
									)
									'end' = switch $ /'node'::'end time'.'is set' (
										|'yes' as $ => $ #'number' transform 'julian date time to JS date'
										|'no' => 0
									)
									'click' = root set state 'show popup': 'yes' (
										'task': text = ^ $ .key
									)
									'start drag' = root set text 'dragged task' = ^ $ .key
								}
							)
							'start time' = switch ::'start time'.'is set' (
								|'yes' as $ => $ #'number' transform 'julian date time to JS date'
								|'no' => 0
							)
							'end time' = switch ::'end time'.'is set' (
								|'yes' as $ => $ #'number' transform 'julian date time to JS date'
								|'no' => 0
							)
							'axis width' = 1500
						}
					}
				} ,
				switch . ::'show popup' (
					|'no' => none
					|'yes' as $ => switch root ::'orders'.'entries'[ $ . ::'task' ] (
						| node as $ => {
							'item markup' = control 'sheet' {
								'position' = 'top' { }
								'close action enabled' = 'yes' {
									'close action' = root set state 'show popup': 'no' ( )
								}
								'main' = control 'padded box' {
									'markup' = control 'list' {
										'space between items' = 'none' { }
										'orientation' = 'vertical' {
											'height' = 'auto' {
												'list' = [
													{
														'item markup' = control 'padded box' {
															'padding top' = 'half' { }
															'padding right' = 'single' { }
															'padding left' = 'single' { }
															'background color' = 'set' {
																'color' = "#f2f2f2"
															}
															'markup' = control 'list' {
																'space between items' = 'none' { }
																'align' = 'center' { }
																'orientation' = 'horizontal' {
																	'width' = 'auto' {
																		'list' = [
																			{
																				'item markup' = control 'font size' {
																					'font size' = 20
																					'markup' = control 'icon' {
																						'name' = 'ballot' { }
																					}
																				}
																			} ,
																			{
																				'item markup' = control 'text' {
																					'text' = switch $ /'entry'/'entity'/'node'::'order'.'is set' (
																						|'yes' as $ => $ .'text'
																						|'no' => "-"
																					)
																					'heading level' = 'second' { }
																				}
																			}
																		]
																	}
																}
															}
														}
													} ,
													{
														'item markup' = control 'padded box' {
															'padding top' = 'half' { }
															'padding right' = 'half' { }
															'padding left' = 'half' { }
															'markup' = control 'property list' {
																'entries' = [
																	switch $ /'entry'/'entity'/'node'::'scheduled'::'yes'.'is selected' (
																		|'yes' $ /'entry'/'entity'/'node'::'scheduled'::'yes'/'node' as $ => [
																			{
																				'label' = control 'text' {
																					'text' = "resource"
																				}
																				'folding' = 'disabled' { }
																				'property' = control 'text' {
																					'text' = switch $ ::'resource'.'is set' (
																						|'yes' as $ => $ .'text'
																						|'no' => "-"
																					)
																				}
																			} ,
																			{
																				'label' = control 'text' {
																					'text' = "start"
																				}
																				'folding' = 'disabled' { }
																				'property' = control 'text' {
																					'text' = switch $ ::'start time'.'is set' (
																						|'yes' as $ => $ #'number' format 'date and time'
																						|'no' => "-"
																					)
																				}
																			} ,
																			{
																				'label' = control 'text' {
																					'text' = "end"
																				}
																				'folding' = 'disabled' { }
																				'property' = control 'text' {
																					'text' = switch $ ::'end time'.'is set' (
																						|'yes' as $ => $ #'number' format 'date and time'
																						|'no' => "-"
																					)
																				}
																			}
																		]
																		|'no' => none
																	)
																]
																'outlined' = 'no' { }
																'layout' = 'normal' { }
															}
														}
													}
												]
											}
										}
									}
								}
								'bottom bar' = control 'toolbar' {
									'items' = [
										{
											'type' = 'flexible space' { }
										} ,
										{
											'type' = 'regular' {
												'markup' = control 'button' {
													'type' = 'text' {
														'text' = "close"
													}
													'enabled' = 'yes' {
														'onclick' = root set state 'show popup': 'no' ( )
													}
												}
											}
										}
									]
								}
							}
						}
						| none => none
					)
				)
			]
		}
	}
}
